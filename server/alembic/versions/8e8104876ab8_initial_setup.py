"""initial setup

Revision ID: 8e8104876ab8
Revises: 
Create Date: 2025-03-02 05:55:53.850904

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8e8104876ab8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('medicine_id', sa.Integer(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('predicted_demand', sa.Float(), nullable=True),
    sa.Column('confidence_interval', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['medicine_id'], ['medicines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_predictions_id'), 'predictions', ['id'], unique=False)
    op.add_column('batches', sa.Column('id', sa.Integer(), nullable=False))
    op.alter_column('batches', 'expiry_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_index('ix_batches_batch_id', table_name='batches')
    op.create_index(op.f('ix_batches_id'), 'batches', ['id'], unique=False)
    op.drop_constraint('batches_medicine_id_fkey', 'batches', type_='foreignkey')
    op.create_foreign_key(None, 'batches', 'medicines', ['medicine_id'], ['id'])
    op.drop_column('batches', 'batch_id')
    op.add_column('medicines', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('medicines', sa.Column('category', sa.String(), nullable=True))
    op.add_column('medicines', sa.Column('unit', sa.String(), nullable=True))
    op.drop_index('ix_medicines_medicine_id', table_name='medicines')
    op.create_index(op.f('ix_medicines_id'), 'medicines', ['id'], unique=False)
    op.drop_column('medicines', 'description')
    op.drop_column('medicines', 'unit_price')
    op.drop_column('medicines', 'medicine_id')
    op.drop_column('medicines', 'reorder_level')
    op.drop_column('medicines', 'manufacturer')
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('ADMIN', 'MANAGER', 'CASHIER', name='userrole'),
               existing_nullable=True)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.alter_column('users', 'role',
               existing_type=sa.Enum('ADMIN', 'MANAGER', 'CASHIER', name='userrole'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('users', 'is_active')
    op.add_column('medicines', sa.Column('manufacturer', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('medicines', sa.Column('reorder_level', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('medicines', sa.Column('medicine_id', sa.INTEGER(), server_default=sa.text("nextval('medicines_medicine_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.add_column('medicines', sa.Column('unit_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('medicines', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_medicines_id'), table_name='medicines')
    op.create_index('ix_medicines_medicine_id', 'medicines', ['medicine_id'], unique=False)
    op.drop_column('medicines', 'unit')
    op.drop_column('medicines', 'category')
    op.drop_column('medicines', 'id')
    op.add_column('batches', sa.Column('batch_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'batches', type_='foreignkey')
    op.create_foreign_key('batches_medicine_id_fkey', 'batches', 'medicines', ['medicine_id'], ['medicine_id'])
    op.drop_index(op.f('ix_batches_id'), table_name='batches')
    op.create_index('ix_batches_batch_id', 'batches', ['batch_id'], unique=False)
    op.alter_column('batches', 'expiry_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
    op.drop_column('batches', 'id')
    op.drop_index(op.f('ix_predictions_id'), table_name='predictions')
    op.drop_table('predictions')
    # ### end Alembic commands ###
